version: '3.4'

services:
  customerdb:
    container_name: customerdb
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: customerdb
    ports:
      - 54321:5432    
    networks:
      - my-network
    volumes:
      - ${WEBAPP_STORAGE_HOME}/site:/data/db
      - customer_postgres_data:/var/lib/postgresql/data/ 

  vehicledb:
    container_name: vehicledb
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: vehicledb
    ports:
      - 54322:5432    
    networks:
      - my-network
    volumes:
      - ${WEBAPP_STORAGE_HOME}/site:/data/db
      - vehicle_postgres_data:/var/lib/postgresql/data/

  trackingdb:
    container_name: trackingdb
    restart: always
    volumes:
      - ${WEBAPP_STORAGE_HOME}/site:/data/db
      - mongo_data:/data/db
    ports:
      - "27017:27017"    
    networks:
      - my-network

  rabbitmq:
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"    
    networks:
      - my-network

  vehicleapi:
    container_name: vehicleapi
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - "ConnectionStrings:DefaultConnection=Server=vehicledb;Database=vehicledb;User Id=postgres;Password=postgres"
      - "EventBus:HostName=rabbitmq"
    depends_on:
      - vehicledb
      - rabbitmq
    ports:
      - "8000:80"    
    networks:
      - my-network

  customersapi:
    container_name: customersapi
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - "ConnectionStrings:DefaultConnection=Server=customerdb;Database=customerdb;User Id=postgres;Password=postgres"
    depends_on:
      - customerdb
    volumes:
      - ${HOME}/.microsoft/usersecrets/:/root/.microsoft/usersecrets
      - ${HOME}/.aspnet/https:/root/.aspnet/https/
    ports:
      - "8001:80"    
    networks:
      - my-network

  trackingapi:
    container_name: trackingapi
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - "MongoDbSettings:ConnectionString=mongodb://trackingdb"
      - "EventBus:HostName=rabbitmq"
    depends_on:
      - trackingdb
      - rabbitmq
    ports:
      - "8002:80"    
    networks:
      - my-network

  apigateway:
    container_name: apigateway
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    depends_on:
      - vehicleapi
      - customersapi
      - trackingapi
    ports:
      - "8003:80"
    networks:
      - my-network
    volumes:
      - ${HOME}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${HOME}/ASP.NET/Https:/root/.aspnet/https:ro

  vehicletrackingui:
    image: angular
    container_name: vehicletrackingui
    build:
      context: ./UI
      dockerfile: Dockerfile
    depends_on:
      - apigateway
    ports:
      - "8004:80"      
    networks:
      - my-network

  pingsimulator:
    container_name: pingsimulator
    restart: always
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - "RemoteHosts:APIBaseUrl=http://apigateway/api"
    depends_on:
      - vehicleapi
      - customersapi
      - trackingapi
      - apigateway    
    networks:
      - my-network


